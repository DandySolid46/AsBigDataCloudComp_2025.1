import { IPerformanceClient } from "@azure/msal-common/src/telemetry/performance/IPerformanceClient";
import { IPerformanceMeasurement } from "@azure/msal-common/src/telemetry/performance/IPerformanceMeasurement";
import { PerformanceClient } from "@azure/msal-common/src/telemetry/performance/PerformanceClient";
import { PerformanceEvents } from "@azure/msal-common/src/telemetry/performance/PerformanceEvent";
export declare class StubPerformanceMeasurement implements IPerformanceMeasurement {
    startMeasurement(): void;
    endMeasurement(): void;
    flushMeasurement(): number | null;
}
export declare class StubPerformanceClient extends PerformanceClient implements IPerformanceClient {
    generateId(): string;
    startPerformanceMeasuremeant(): IPerformanceMeasurement;
    startPerformanceMeasurement(): IPerformanceMeasurement;
    calculateQueuedTime(preQueueTime: number, currentTime: number): number;
    addQueueMeasurement(eventName: PerformanceEvents, correlationId: string, queueTime: number): void;
    setPreQueueTime(eventName: PerformanceEvents, correlationId?: string | undefined): void;
}
//# sourceMappingURL=StubPerformanceClient.d.ts.map